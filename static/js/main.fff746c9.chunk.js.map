{"version":3,"sources":["JSONValidationErrorList.tsx","examplesList.tsx","SearchBar/SearchBar.tsx","SnackBar/SnackBar.tsx","AppBar/AppBar.tsx","themes/openrpcTheme.ts","PlaygroundSplitPane.tsx","hooks/useMonaco.tsx","hooks/useMonacoModel.tsx","hooks/useParsedSchema.tsx","hooks/useDefaultEditorValue.tsx","hooks/useMonacoVimMode.tsx","hooks/useMonacoReplaceMetaSchema.tsx","hooks/useUISchema.tsx","hooks/useQueryParams.tsx","stores/queryParamsStore.ts","stores/UISchemaStore.ts","UISchema.tsx","fetchUrlSchemaFile.tsx","fetchSchemaFromRpcDiscover.tsx","hooks/useSearchBar.tsx","stores/searchBarStore.ts","plugins/InspectorPlugin.tsx","App.tsx","index.tsx"],"names":["withStyles","theme","list","color","palette","secondary","main","height","listStyle","overflow","wrapper","maxHeight","props","classes","markers","length","react_default","a","createElement","className","map","marker","key","message","startLineNumber","startColumn","examplesList","name","url","NotificationType","title","marginLeft","spacing","unit","appBar","uiSchema","searchBarUrl","onChangeUrl","downshift_esm","initialInputValue","onInputValueChange","id","_ref","query","getInputProps","getItemProps","getMenuProps","getLabelProps","isOpen","inputValue","highlightedIndex","selectItem","selectedItem","openMenu","clearSelection","index_es","Object","assign","onBlur","e","target","value","onChange","onFocus","event","placeholder","style","width","position","zIndex","maxWidth","suggestions","filter","includes","suggestion","index","isSelected","item","selected","component","fontWeight","container","xs","variant","ApplicationBar","_this$props","this","onSplitViewChange","onDarkModeChange","elevation","alignItems","sm","direction","alt","src","only","background","padding","src_SearchBar_SearchBar","justify","Fullscreen_default","onClick","VerticalSplit_default","Brightness3_default","WbSunny_default","Component","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarCntWrapper","onClose","other","objectWithoutProperties","Icon","classNames","aria-describedby","icon","iconVariant","action","IconButton_default","aria-label","close","Close_default","React","SnackBarContentWrapper","green","backgroundColor","dark","primary","amber","fontSize","opacity","marginRight","display","margin","SnackBarWrapper","_this$props2","notification","isEmpty","open","autoHideDuration","anchorOrigin","vertical","horizontal","type","SnackBar","lightTheme","createMuiTheme","MuiAppBar","MuiCard","overrides","MuiToolbar","root","colorDefault","colorPrimary","default","darkTheme","grey","paper","MuiTable","MuiTypography","PlaygroundSplitPane","split","right","index_esm","minSize","maxSize","defaultSize","window","innerWidth","size","flexDirection","left","useMonaco","monacoRef","darkMode","watchers","_useState","useState","_useState2","slicedToArray","editor","setEditor","updateDimensions","layout","useEffect","onChangeRef","current","monaco","create","onDidChangeModelContent","v","getValue","addEventListener","removeEventListener","dispose","toConsumableArray","useMonacoModel","defaultValue","schema","model","setModel","_useState3","_useState4","setPosition","existingModel","getModels","modelUri","parse","concat","Math","random","m","createModel","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","updateOptions","tabSize","_position","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","setSelection","focus","useParsedSchema","parsedSchema","setParsedSchema","validateAndSetSchema","maybeSchema","JSON","refParser","dereference","then","dereferencedSchema","_","defer","localStorage","setItem","useDefaultEditorValue","getItem","initVimMode","require","useMonacoVimMode","vimMode","setVimMode","addAction","label","keybindings","chord","CtrlCmd","KEY_K","KEY_V","contextMenuGroupId","contextMenuOrder","run","useMonacoReplaceMetaSchema","metaSchema","setMetaSchema","KEY_R","result","prompt","useUISchema","UISchema","setUISchema","section","objectSpread","defineProperty","useQueryParams","qs","location","search","ignoreQueryPrefix","depth","decoder","str","test","parseFloat","decodeURIComponent","createStore","b","_queryParamsStore","queryParamsStore","ui:input","ui:inputPlaceholder","ui:logoUrl","ui:splitView","ui:darkMode","ui:title","methods","ui:defaultExpanded","ui:methodPlugins","params","fetchUrlSchemaFile","asyncToGenerator","regenerator_default","mark","_callee","schemaUrl","response","wrap","_context","prev","next","fetch","sent","status","Error","abrupt","text","stop","_x","apply","arguments","idCounter","fetchSchemaFromRpcDiscover","responseJSON","body","stringify","jsonrpc","method","headers","Content-Type","useSearchBar","searchUrl","setSearchUrl","results","setResults","_useState5","_useState6","setError","match","catch","msg","console","_queryParamStore","queryParamStore","InspectorPlugin","exampleParams","_UISchemaStore","UISchemaStore","_searchBarStore","searchBarStore","_searchBarStore2","_searchBarStore2$","openrpcMethodObject","examples","p","overflowY","package_default","request","hideToggleTheme","reactJsonTheme","App","_useDefaultEditorValu","_useDefaultEditorValu2","setMarkers","setNotification","_UISchemaStore2","setUISchemaBySection","setTheme","setReactJsonOptions","reactJsonOptions","useInterval","getModelMarkers","setValue","_useParsedSchema","_useParsedSchema2","_useState7","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","_useState8","monacoEl","useRef","_useMonaco","debounce","changes","range","_useMonaco2","_useMonacoReplaceMeta","_useMonacoModel","_useMonacoModel2","_useMonacoVimMode","styles","AppBar","src_PlaygroundSplitPane","Fragment","src_JSONValidationErrorList","ref","build","methodPlugins","undefined","ReactDOM","render","dist","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fff746c9.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nconst JSONValidationErrorList: React.FC<IProps> = (props) => {\n  const { classes, markers } = props;\n  if (!markers || markers.length === 0) { return null; }\n  return (\n    <div className={classes.wrapper}>\n      <ul className={classes.list}>\n        {markers && markers.map((marker) => {\n          return (\n            <li key={marker.message}>\n              {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n\n};\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","export default [\n  {\n    name: \"api-with-examples\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/api-with-examples-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"link-example\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/link-example-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"params-by-name-petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/params-by-name-petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore-expanded\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-expanded-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"simple-math\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/simple-math-openrpc.json\", //tslint:disable-line\n  },\n];\n","import React, { Component, ChangeEvent } from \"react\";\nimport Downshift from \"downshift\";\nimport {\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Paper,\n  Menu,\n  MenuItem,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\nimport suggestions from \"../examplesList\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  searchBarUrl: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nfunction getSuggestion(query: string | null) {\n  if (!query) {\n    return suggestions;\n  }\n  return suggestions.filter((value) => {\n    return value.name.includes(query) || value.url.includes(query);\n  });\n}\n\nconst SearchBar: React.FC<IProps> = (props) => {\n  const { uiSchema,  searchBarUrl, onChangeUrl } = props;\n  return (\n    <Downshift initialInputValue={searchBarUrl} onInputValueChange={onChangeUrl} id=\"downshift\">\n      {({\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem,\n        selectItem,\n        openMenu,\n        clearSelection,\n      }) => (\n          <div>\n            <InputBase\n              {...getInputProps({\n                onBlur: (e: any) => {\n                  selectItem(e.target.value);\n                },\n                onChange: (e) => {\n                  if (e.target.value === \"\") {\n                    clearSelection();\n                  }\n                },\n              })}\n              onFocus={(event: any) => openMenu()}\n              placeholder={uiSchema && uiSchema.appBar[\"ui:inputPlaceholder\"]}\n              style={{ width: \"100%\" }}\n            />\n            <div {...getMenuProps()} style={{ position: \"absolute\", zIndex: 1 }}>\n              {isOpen ? (\n                <Paper style={{ maxWidth: \"640px\" }}>\n                  {getSuggestion(inputValue).map((suggestion: any, index: number) => {\n                    const isSelected = highlightedIndex === index;\n                    return (\n                      <MenuItem\n                        {...getItemProps({ item: suggestion.url })}\n                        key={suggestion.url}\n                        selected={isSelected}\n                        component=\"div\"\n                        style={{\n                          fontWeight: isSelected ? 500 : 400,\n                        }}\n                      >\n                        <Grid container spacing={0}>\n                          <Grid item xs={12}>\n                            <Typography variant=\"subheading\">{suggestion.name}</Typography>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Typography variant=\"caption\">{suggestion.url}</Typography>\n                          </Grid>\n                        </Grid>\n                      </MenuItem>\n                    );\n                  })}\n                </Paper>\n              ) : null}\n            </div>\n          </div>\n        )}\n    </Downshift>\n  );\n};\n\nexport default withStyles(styles)(SearchBar);\n","import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component, ChangeEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { IUISchema } from \"../UISchema\";\nimport {isEmpty} from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success= \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  uiSchema?: IUISchema;\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n uiSchema?: IUISchema;\n onClose: any;\n variant: NotificationType;\n className: string;\n message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n      open\n      autoHideDuration={10000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}>\n      <SnackBarContentWrapper\n      onClose={close}\n      variant={notification.type}\n      message={<span>{notification.message}</span>}\n      className={classes.margin}\n      />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import React, { Component, ChangeEvent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  IconButton,\n  Paper,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n} from \"@material-ui/core\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport { IUISchema } from \"../UISchema\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  searchBarUrl: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange: (split: boolean) => any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes, onSplitViewChange, onDarkModeChange } = this.props;\n    return (\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Grid alignItems=\"center\" container spacing={24}>\n            <Grid item xs={6} sm={3} direction=\"row\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={7}>\n                {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:input\"] &&\n                  <Paper style={{\n                    background: \"rgba(0, 0, 0, 0.1)\",\n                    padding: \"0px 10px 0px 10px\",\n                    width: \"100%\",\n                  }} elevation={0}>\n                    <SearchBar\n                      searchBarUrl={this.props.searchBarUrl}\n                      onChangeUrl={this.props.onChangeUrl} uiSchema={uiSchema}\n                    />\n                  </Paper>\n                }\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={2} container justify=\"flex-end\">\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:splitView\"] ?\n                  <FullscreenIcon onClick={() => onSplitViewChange(false)} />\n                  :\n                  <VerticalSplitIcon onClick={() => onSplitViewChange(true)} />\n                }\n              </IconButton>\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:darkMode\"] ?\n                  <Brightness3Icon onClick={() => onDarkModeChange(false)} />\n                  :\n                  <WbSunnyIcon onClick={() => onDarkModeChange(true)} />\n                }\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiAppBar: {\n      root: {\n        backgroundColor: \"transparent !important\",\n      },\n      colorDefault: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: \"transparent\",\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import SplitPane from \"react-split-pane\";\nimport React, { useState } from \"react\";\nimport { Component } from \"react\";\n\ninterface IProps {\n  onChange?: (size: number) => any;\n  left: JSX.Element;\n  right: JSX.Element;\n  split?: boolean | undefined;\n}\n\nconst PlaygroundSplitPane: React.FC<IProps> = (props) => {\n  const handleChange = (size: number) => {\n    if (props.onChange) {\n      props.onChange(size);\n    }\n  };\n\n  if (props.split === false) {\n    return (\n      <div className=\"docs\" key={2}>\n        {props.right}\n      </div>\n    );\n  }\n\n  return (\n    <SplitPane split=\"vertical\"\n      minSize={100}\n      maxSize={-100}\n      defaultSize={window.innerWidth / 2}\n      onChange={handleChange}>\n      <div key={1} style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }} >\n        {props.left}\n      </div>\n      <div className=\"docs\" key={2}>\n        {props.right}\n      </div>\n    </SplitPane>\n  );\n};\n\nexport default PlaygroundSplitPane;\n","import React, { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\n\nconst useMonaco = (\n  monacoRef: React.RefObject<HTMLElement>,\n  darkMode: boolean,\n  onChange?: (event: monaco.editor.IModelContentChangedEvent, schema: string) => any,\n  watchers?: any[],\n) => {\n  const [editor, setEditor] = useState();\n  const updateDimensions = () => {\n    if (editor) {\n      editor.layout();\n    }\n  };\n  useEffect(() => {\n    let onChangeRef: monaco.IDisposable;\n    if (monacoRef && monacoRef.current) {\n      const e = monaco.editor.create(monacoRef.current, {\n        theme: darkMode ? \"vs-dark\" : \"vs\",\n      });\n      setEditor(e);\n      onChangeRef = e.onDidChangeModelContent((event: monaco.editor.IModelContentChangedEvent) => {\n        if (onChange) {\n          const v = e.getValue();\n          onChange(event, v);\n        }\n      });\n      window.addEventListener(\"resize\", updateDimensions);\n    }\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n      if (editor) {\n        editor.dispose();\n      }\n      if (onChangeRef) {\n        onChangeRef.dispose();\n      }\n    };\n  }, [...watchers || []]);\n  return [editor, updateDimensions];\n};\n\nexport default useMonaco;\n","import { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\n\nconst useMonacoModel = (\n  defaultValue: string | undefined | null,\n  editor: monaco.editor.IStandaloneCodeEditor,\n  schema: any,\n) => {\n  const [model, setModel] = useState();\n  const [position, setPosition] = useState([4, 13, 4, 13]);\n  useEffect(() => {\n    if (editor) {\n      const existingModel = monaco.editor.getModels()[0];\n      if (existingModel) {\n        existingModel.dispose();\n      }\n      const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n      const m = monaco.editor.createModel(defaultValue || \"\", \"json\", modelUri);\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            fileMatch: [\"*\"],\n            schema,\n            uri: modelUri.toString(),\n          },\n        ],\n        validate: true,\n      });\n      m.updateOptions({ tabSize: 2 });\n      setModel(m);\n      editor.setModel(m);\n      const [selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn] = position;\n      editor.setSelection(\n        new monaco.Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn),\n      );\n      editor.focus();\n    }\n\n    return () => {\n      if (model) {\n        model.dispose();\n      }\n    };\n  }, [editor, schema]);\n  return [model, setPosition];\n};\n\nexport default useMonacoModel;\n","import { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport refParser from \"json-schema-ref-parser\";\n\nconst useParsedSchema = (defaultValue: object | any) => {\n  const [parsedSchema, setParsedSchema] = useState();\n  const validateAndSetSchema = (schema: string) => {\n    let maybeSchema;\n    try {\n      maybeSchema = JSON.parse(schema);\n    } catch (e) {\n      //\n    }\n    if (!maybeSchema) {\n      return;\n    }\n    refParser.dereference(maybeSchema).then((dereferencedSchema) => {\n      setParsedSchema(dereferencedSchema);\n      _.defer(() => window.localStorage.setItem(\"schema\", schema));\n    });\n  };\n  useEffect(() => {\n    if (defaultValue) {\n      validateAndSetSchema(defaultValue);\n    }\n  }, []);\n  return [parsedSchema, validateAndSetSchema];\n};\n\nexport default useParsedSchema;\n","import { useState, Dispatch } from \"react\";\n\nfunction useDefaultEditorValue(): [string | null, Dispatch<any>] {\n  const [defaultValue, setDefaultValue] = useState<string | null>(() => {\n    return window.localStorage.getItem(\"schema\");\n  });\n  return [defaultValue, setDefaultValue];\n}\n\nexport default useDefaultEditorValue;\n","import React, { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\n\n// Vim Mode:\n// Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\nconst useMonacoVimMode = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [vimMode, setVimMode] = useState();\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"vim-mode\",\n      label: \"Vim Mode\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        if (vimMode) {\n          vimMode.dispose();\n        }\n        setVimMode(initVimMode(editor));\n      },\n    });\n\n    return () => {\n      if (vimMode) {\n        vimMode.dispose();\n      }\n    };\n  }, [editor]);\n\n  return [editor, vimMode];\n};\n\nexport default useMonacoVimMode;\n","import React, { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\nimport schema from \"@open-rpc/meta-schema\";\n\n// Monaco Replace Meta Schema:\n// Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\nconst useMonacoReplaceMetaSchema = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [metaSchema, setMetaSchema] = useState(schema);\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"replace-meta-schema\",\n      label: \"Replace Meta Schema\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          setMetaSchema(JSON.parse(result));\n        }\n      },\n    });\n  }, [editor]);\n\n  return [metaSchema];\n};\n\nexport default useMonacoReplaceMetaSchema;\n","import { useState } from \"react\";\nimport { IUISchema } from \"../UISchema\";\n\ntype SetSectionType = ({ section, key, value }: {\n  section: string;\n  key: string;\n  value: any;\n}) => any;\n\nconst useUISchema = (defaultValue: IUISchema): [IUISchema, SetSectionType] => {\n  const [UISchema, setUISchema] = useState(defaultValue);\n  const setUISchemaBySection: SetSectionType = ({ section, key, value }) => {\n    setUISchema({\n      ...UISchema,\n      [section]: {\n        ...UISchema.appBar,\n        [key]: value,\n      },\n    });\n  };\n  return [UISchema, setUISchemaBySection];\n};\n\nexport default useUISchema;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = () => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import { createStore } from \"reusable\";\nimport useQueryParams from \"../hooks/useQueryParams\";\n\nexport default createStore(() => {\n  return useQueryParams();\n});\n","import { createStore } from \"reusable\";\nimport useUISchema from \"../hooks/useUISchema\";\nimport queryParamsStore from \"./queryParamsStore\";\nimport { mergeUISchema } from \"../UISchema\";\n\nexport default createStore(() => {\n  const [query] = queryParamsStore();\n\n  const defaultUISchema = {\n    appBar: {\n      \"ui:input\": true,\n      \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n      /* tslint:disable */\n      \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n      /* tslint:enable */\n      \"ui:splitView\": true,\n      \"ui:darkMode\": false,\n      \"ui:title\": \"OpenRPC Playground\",\n    },\n    methods: {\n      \"ui:defaultExpanded\": false,\n      \"ui:methodPlugins\": true,\n    },\n    params: {\n      \"ui:defaultExpanded\": false,\n    },\n  };\n  return useUISchema(mergeUISchema(defaultUISchema, query.uiSchema));\n});\n","export interface IUISchema {\n  appBar: {\n    [\"ui:title\"]: string,\n    [\"ui:logoUrl\"]: string,\n    [\"ui:input\"]: boolean,\n    [\"ui:inputPlaceholder\"]: string,\n    [\"ui:splitView\"]: boolean,\n    [\"ui:darkMode\"]: boolean,\n  };\n  methods: {\n    [\"ui:defaultExpanded\"]: boolean,\n    [\"ui:methodPlugins\"]: boolean,\n  };\n  params: {\n    [\"ui:defaultExpanded\"]: boolean,\n  };\n}\n\nexport const mergeUISchema = (a: IUISchema, b: IUISchema) => {\n  if (a && b) {\n    return {\n      appBar: {\n        ...a.appBar,\n        ...b.appBar || {},\n      },\n      methods: {\n        ...a.methods,\n        ...b.methods || {},\n      },\n      params: {\n        ...a.params,\n        ...b.params || {},\n      },\n    };\n  } else {\n    return a || b;\n  }\n};\n","export default async (schemaUrl: string) => {\n  const response = await fetch(schemaUrl);\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  return response.text();\n};\n","let idCounter = 0;\nexport default async (url: string) => {\n  const response = await fetch(url, {\n    body: JSON.stringify({\n      id: idCounter++,\n      jsonrpc: \"2.0\",\n      method: \"rpc.discover\",\n      params: [],\n    }),\n    headers: { \"Content-Type\": \"application/json\" },\n    method: \"POST\",\n  });\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  const responseJSON = await response.json();\n  return JSON.stringify(responseJSON.result, null, 2);\n};\n","import { useState, useEffect, Dispatch } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport fetchUrlSchemaFile from \"../fetchUrlSchemaFile\";\nimport fetchSchemaFromRpcDiscover from \"../fetchSchemaFromRpcDiscover\";\n\ninterface ISearchBarResponse {\n  results: any;\n  error: string | undefined;\n}\n\nconst useSearchBar = (defaultValue: string | undefined): [string | undefined, ISearchBarResponse, Dispatch<any>] => {\n  const [searchUrl, setSearchUrl] = useState<string | undefined>(defaultValue);\n  const [results, setResults] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (!searchUrl) {\n      return;\n    }\n    if (isEmpty(searchUrl)) {\n      return;\n    }\n    if (searchUrl.match(/\\.json$/)) {\n      fetchUrlSchemaFile(searchUrl)\n        .then(setResults)\n        .catch((e) => {\n          const msg = `Error fetching schema for: ${searchUrl}`;\n          console.error(msg, e);\n          setError(msg);\n        });\n    } else {\n      fetchSchemaFromRpcDiscover(searchUrl)\n        .then(setResults)\n        .catch((e) => {\n          const msg = `Error fetching rpc.discover for: ${searchUrl}`;\n          console.error(msg, e);\n          setError(msg);\n        });\n    }\n  }, [searchUrl]);\n  return [searchUrl, { results, error }, setSearchUrl];\n};\n\nexport default useSearchBar;\n","import { createStore } from \"reusable\";\nimport useSearchBar from \"../hooks/useSearchBar\";\nimport queryParamStore from \"./queryParamsStore\";\n\nexport default createStore(() => {\n  const [query] = queryParamStore();\n\n  return useSearchBar(query.schemaUrl);\n});\n","import React from \"react\";\nimport Inspector from \"@open-rpc/inspector\";\nimport { Grid } from \"@material-ui/core\";\nimport { IMethodPluginProps } from \"@open-rpc/docs-react/build/Methods/Methods\";\nimport UISchemaStore from \"../stores/UISchemaStore\";\nimport { IUISchema } from \"../UISchema\";\nimport searchBarStore from \"../stores/searchBarStore\";\nimport { ExamplePairingObject, ExampleObject } from \"@open-rpc/meta-schema\";\n\nconst InspectorPlugin: React.FC<IMethodPluginProps> = (props) => {\n  const [UISchema]: [IUISchema] = UISchemaStore();\n  const [searchUrl, { results, error }, setSearchUrl] = searchBarStore();\n  const method = props.openrpcMethodObject;\n  const examplePosition = 0;\n  let example;\n  let exampleParams;\n  if (method && method.examples && method.examples[examplePosition]) {\n    example = method.examples[examplePosition] as ExamplePairingObject;\n    exampleParams = (example.params as ExampleObject[]).map((p) => p.value);\n  }\n  return (\n    <Grid style={{ height: \"300px\", width: \"100%\", overflowY: \"auto\" }}>\n      <Inspector\n        request={{ method: method.name, params: exampleParams || [] }}\n        url={searchUrl && searchUrl.includes(\".json\") ? null : searchUrl}\n        darkMode={UISchema.appBar[\"ui:darkMode\"]}\n        hideToggleTheme={true}\n        reactJsonTheme={UISchema.appBar[\"ui:darkMode\"] ? \"summerfruit\" : \"summerfruit:inverted\"}\n      />\n    </Grid>\n  );\n};\n\nexport default InspectorPlugin;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport * as monaco from \"monaco-editor\";\nimport _ from \"lodash\";\nimport { Documentation } from \"@open-rpc/docs-react\";\nimport useInterval from \"@use-it/interval\";\nimport \"./App.css\";\nimport AppBar from \"./AppBar/AppBar\";\nimport { OpenRPC } from \"@open-rpc/meta-schema\";\nimport { mergeUISchema, IUISchema } from \"./UISchema\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"./SnackBar/SnackBar\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./themes/openrpcTheme\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport PlaygroundSplitPane from \"./PlaygroundSplitPane\";\nimport useMonaco from \"./hooks/useMonaco\";\nimport useMonacoModel from \"./hooks/useMonacoModel\";\nimport useParsedSchema from \"./hooks/useParsedSchema\";\nimport useDefaultEditorValue from \"./hooks/useDefaultEditorValue\";\nimport useMonacoVimMode from \"./hooks/useMonacoVimMode\";\nimport useMonacoReplaceMetaSchema from \"./hooks/useMonacoReplaceMetaSchema\";\nimport InspectorPlugin from \"./plugins/InspectorPlugin\";\nimport UISchemaStore from \"./stores/UISchemaStore\";\nimport searchBarStore from \"./stores/searchBarStore\";\n\nconst App: React.FC = () => {\n  const [defaultValue, setDefaultValue] = useDefaultEditorValue();\n  const [markers, setMarkers] = useState<monaco.editor.IMarker[]>([] as monaco.editor.IMarker[]);\n  const [searchUrl, { results, error }, setSearchUrl] = searchBarStore();\n  const [notification, setNotification] = useState<ISnackBarNotification | undefined>();\n  const [UISchema, setUISchemaBySection]: [IUISchema, any] = UISchemaStore();\n  const [monacoTheme, setMonacoTheme] = useState();\n\n  useEffect(() => {\n    if (editor) {\n      monaco.editor.setTheme(UISchema.appBar[\"ui:darkMode\"] ? \"vs-dark\" : \"vs\");\n    }\n    setReactJsonOptions({\n      ...reactJsonOptions,\n      theme: UISchema.appBar[\"ui:darkMode\"] ? \"summerfruit\" : \"summerfruit:inverted\",\n    });\n  }, [UISchema.appBar[\"ui:darkMode\"]]);\n\n  useInterval(() => {\n    setMarkers(monaco.editor.getModelMarkers({}));\n  }, 5000);\n\n  useEffect(() => {\n    if (results && editor) {\n      editor.setValue(results);\n    }\n    if (results) {\n      setParsedSchema(results);\n    }\n  }, [results]);\n\n  useEffect(() => {\n    if (error) {\n      setNotification({\n        type: NotificationType.error,\n        message: error,\n      });\n    }\n  }, [error]);\n\n  const [parsedSchema, setParsedSchema] = useParsedSchema(defaultValue ? JSON.parse(defaultValue) : null);\n  useEffect(() => {\n    setParsedSchema(defaultValue);\n  }, [defaultValue]);\n  const [reactJsonOptions, setReactJsonOptions] = useState({\n    theme: \"summerfruit:inverted\",\n    collapseStringsAfterLength: 25,\n    displayDataTypes: false,\n    displayObjectSize: false,\n    indentWidth: 2,\n    name: false,\n  });\n  const monacoEl = useRef(null);\n  const handleMonacoEditorOnChange = (event: monaco.editor.IModelContentChangedEvent, value: string) => {\n    setParsedSchema(value);\n    const changes = event.changes[0].range;\n    setPosition([changes.startLineNumber, changes.startColumn, changes.startLineNumber, changes.startColumn]);\n  };\n  const [editor, updateDimensions] = useMonaco(\n    monacoEl,\n    UISchema.appBar[\"ui:darkMode\"],\n    _.debounce(handleMonacoEditorOnChange, 500),\n    [UISchema],\n  );\n  const [metaSchema] = useMonacoReplaceMetaSchema(editor);\n  const [model, setPosition] = useMonacoModel(\n    parsedSchema ? JSON.stringify(parsedSchema, null, 2) : defaultValue,\n    editor,\n    metaSchema,\n  );\n  const [vimMode] = useMonacoVimMode(editor);\n\n  return (\n    <MuiThemeProvider theme={UISchema.appBar[\"ui:darkMode\"] ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <AppBar\n        searchBarUrl={searchUrl}\n        uiSchema={UISchema}\n        onSplitViewChange={(value) => {\n          setUISchemaBySection({\n            value,\n            key: \"ui:splitView\",\n            section: \"appBar\",\n          });\n        }}\n        onDarkModeChange={(value: boolean) => {\n          setUISchemaBySection({\n            value,\n            key: \"ui:darkMode\",\n            section: \"appBar\",\n          });\n        }}\n        onChangeUrl={setSearchUrl} />\n      <PlaygroundSplitPane\n        split={UISchema.appBar[\"ui:splitView\"]}\n        onChange={updateDimensions as any}\n        left={\n          <>\n            <JSONValidationErrorList markers={markers} />\n            <div key={\"editor\"} style={{ height: \"100%\" }} ref={monacoEl} />\n          </>\n        }\n        right={\n          <Documentation\n            schema={parsedSchema as any}\n            uiSchema={UISchema}\n            reactJsonOptions={reactJsonOptions}\n            methodPlugins={\n              UISchema.methods[\"ui:methodPlugins\"]\n                ? [InspectorPlugin]\n                : undefined\n            }\n          />\n        }\n      />\n      <SnackBar\n        close={() => setNotification({} as ISnackBarNotification)}\n        notification={notification as ISnackBarNotification} />\n    </MuiThemeProvider>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ReusableProvider } from \"reusable\";\n\nReactDOM.render(\n  <ReusableProvider>\n    <App />\n  </ReusableProvider>\n, document.getElementById(\"root\"));\n"],"sourceRoot":""}
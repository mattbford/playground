{"version":3,"sources":["SnackBar/SnackBar.tsx","JSONValidationErrorList.tsx","SearchBar/SearchBar.tsx","ExampleDocumentsDropdown/ExampleDocumentsDropdown.tsx","AppBar/AppBar.tsx","themes/openrpcTheme.ts","PlaygroundSplitPane.tsx","hooks/useParsedSchema.tsx","hooks/useDefaultEditorValue.tsx","fetchSchemaFromRpcDiscover.tsx","hooks/useSearchBar.tsx","fetchUrlSchemaFile.tsx","hooks/useQueryParams.tsx","stores/queryParamsStore.ts","stores/searchBarStore.ts","stores/inspectorActionStore.ts","plugins/InspectorPlugin.tsx","hooks/useUISchema.tsx","stores/UISchemaStore.ts","UISchema.tsx","examplesList.tsx","OpenRPCEditor.tsx","hooks/useMonacoReplaceMetaSchema.tsx","hooks/useMonacoVimMode.tsx","App.tsx","index.tsx"],"names":["NotificationType","withStyles","theme","list","color","palette","secondary","main","height","listStyle","overflow","wrapper","maxHeight","props","classes","markers","length","className","map","marker","key","message","startLineNumber","startColumn","title","marginLeft","spacing","appBar","uiSchema","searchBarUrl","onChangeUrl","InputBase","value","placeholder","style","width","onChange","event","target","ExampleDocumentsDropdown","examples","React","anchorEl","setAnchorEl","Tooltip","Button","onClick","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","maxWidth","example","MenuItem","handleMenuItemClick","Grid","container","item","xs","Typography","variant","name","fontSize","url","ApplicationBar","this","onSplitViewChange","onDarkModeChange","onExampleDocumentsDropdownChange","AppBar","position","elevation","Toolbar","alignItems","sm","direction","alt","src","Hidden","only","Paper","background","padding","justify","IconButton","Component","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarCntWrapper","other","Icon","SnackbarContent","classNames","aria-describedby","icon","iconVariant","action","aria-label","close","SnackBarContentWrapper","green","backgroundColor","dark","primary","amber","opacity","marginRight","display","margin","SnackBarWrapper","notification","isEmpty","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","type","SnackBar","lightTheme","createMuiTheme","MuiAppBar","MuiCard","overrides","MuiPaper","root","zIndex","MuiToolbar","colorDefault","colorPrimary","default","darkTheme","grey","paper","MuiTable","MuiTypography","PlaygroundSplitPane","split","onlyRenderSplit","splitLeft","leftStyle","rightStyle","left","right","dir","defaultSize","window","innerHeight","innerWidth","minSize","maxSize","size","flexDirection","useParsedSchema","defaultValue","useState","parsedSchema","setParsedSchema","validateAndSetSchema","schema","maybeSchema","JSON","parse","e","refParser","dereference","then","dereferencedSchema","_","defer","localStorage","setItem","useEffect","useDefaultEditorValue","getItem","idCounter","useSearchBar","searchUrl","setSearchUrl","results","setResults","setError","match","schemaUrl","a","async","fetch","response","status","Error","text","fetchUrlSchemaFile","catch","msg","console","body","stringify","jsonrpc","method","params","headers","json","responseJSON","result","fetchSchemaFromRpcDiscover","useQueryParams","qs","location","search","ignoreQueryPrefix","depth","decoder","str","test","parseFloat","decodeURIComponent","createStore","queryParamStore","query","InspectorPlugin","exampleParams","searchBarStore","useInspectorActionStore","setInspectorContents","openrpcMethodObject","p","request","role","useUISchema","UISchema","setUISchema","section","b","queryParamsStore","methods","OpenRPCEditor","model","editorRef","useRef","windowSize","useWindowSize","undefined","current","layout","dispose","editorOptions","useShadows","minimap","enabled","scrollBeyondLastLine","lineNumbers","editorDidMount","editor","modelUri","monaco","createModel","setModel","addDiagnostics","toString","language","ev","useMonacoReplaceMetaSchema","metaSchema","setMetaSchema","addAction","label","keybindings","chord","CtrlCmd","KEY_K","KEY_R","contextMenuGroupId","contextMenuOrder","run","prompt","initVimMode","require","useMonacoVimMode","vimMode","setVimMode","KEY_V","App","setMarkers","setNotification","UISchemaStore","setUISchemaBySection","setEditor","horizontalSplit","privateSetHorizontalSplit","setHorizontalSplit","val","setTimeout","inspectorContents","defaultExample","find","setReactJsonOptions","reactJsonOptions","useInterval","mk","getModelMarkers","resource","setValue","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","currentTheme","CssBaseline","setTheme","hideToggleTheme","includes","openrpcDocument","marginTop","paddingBottom","overflowY","__","ed","Container","methodPlugins","Tabs","indicatorColor","bottom","marginBottom","Tab","paddingRight","border","hint","top","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54de16b8.chunk.js","sourcesContent":["import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { IUISchema } from \"../UISchema\";\nimport {isEmpty} from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  close: {\n    padding: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(2),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing(1),\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success= \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  uiSchema?: IUISchema;\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n uiSchema?: IUISchema;\n onClose: any;\n variant: NotificationType;\n className: string;\n message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n      open\n      autoHideDuration={10000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}>\n      <SnackBarContentWrapper\n      onClose={close}\n      variant={notification.type}\n      message={<span>{notification.message}</span>}\n      className={classes.margin}\n      />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nconst JSONValidationErrorList: React.FC<IProps> = (props) => {\n  const { classes, markers } = props;\n  if (!markers || markers.length === 0) { return null; }\n  return (\n    <div className={classes.wrapper}>\n      <ul className={classes.list}>\n        {markers && markers.map((marker) => {\n          return (\n            <li key={marker.message}>\n              {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n\n};\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","import React from \"react\";\nimport {\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  searchBarUrl: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nconst SearchBar: React.FC<IProps> = (props) => {\n  const { uiSchema, searchBarUrl, onChangeUrl } = props;\n  const handleChange = (event: any) => {\n    onChangeUrl(event.target.value);\n  };\n  return (\n    <InputBase value={searchBarUrl} placeholder={uiSchema && uiSchema.appBar[\"ui:inputPlaceholder\"]} style={{ width: \"100%\" }}  onChange={handleChange}/>\n  );\n};\n\nexport default withStyles(styles)(SearchBar);\n","import * as React from \"react\";\nimport { Menu, MenuItem, Tooltip, Button, Grid, Typography } from \"@material-ui/core\";\n\nexport interface IExample {\n  name: \"string\";\n  url: \"string\";\n}\n\ninterface IProps {\n  onChange?: (example: IExample) => any;\n  examples?: IExample[];\n}\n\nconst ExampleDocumentsDropdown: React.FC<IProps> = ({ examples, onChange }) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (example: IExample) => {\n    setAnchorEl(null);\n    if (onChange) {\n      onChange(example);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (!examples) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip title={\"Example OpenRPC Documents\"}>\n        <Button onClick={handleClick}>Examples</Button>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div style={{ maxWidth: \"525px\" }}>\n          {examples.map((example: any) => (\n            <MenuItem onClick={(event) => handleMenuItemClick(example)}>\n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle1\">{example.name}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" style={{fontSize: \"9px\"}}>{example.url}</Typography>\n                </Grid>\n              </Grid>\n            </MenuItem>\n          ))}\n        </div>\n\n      </Menu>\n    </>\n  );\n};\n\nexport default ExampleDocumentsDropdown;\n","import React, { Component } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  IconButton,\n  Paper,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n} from \"@material-ui/core\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport { IUISchema } from \"../UISchema\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport ExampleDocumentsDropdown, { IExample } from \"../ExampleDocumentsDropdown/ExampleDocumentsDropdown\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  examples?: IExample[];\n  searchBarUrl?: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: (split: boolean) => any;\n  onExampleDocumentsDropdownChange?: (example: IExample) => any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const {\n      uiSchema,\n      classes,\n      onSplitViewChange,\n      onDarkModeChange,\n      examples,\n      onExampleDocumentsDropdownChange,\n    } = this.props;\n    return (\n      <AppBar position=\"fixed\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Grid alignItems=\"center\" container spacing={10}>\n            <Grid item xs={6} sm={3} direction=\"row\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={6}>\n                {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:input\"] &&\n                  <Paper style={{\n                    background: \"rgba(0, 0, 0, 0.1)\",\n                    padding: \"0px 10px 0px 10px\",\n                    width: \"100%\",\n                  }} elevation={0}>\n                    <SearchBar\n                      searchBarUrl={this.props.searchBarUrl}\n                      onChangeUrl={this.props.onChangeUrl}\n                      uiSchema={uiSchema}\n                    />\n                  </Paper>\n                }\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={3} container justify=\"flex-end\">\n              <ExampleDocumentsDropdown examples={examples} onChange={onExampleDocumentsDropdownChange} />\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:splitView\"] ?\n                  <FullscreenIcon onClick={() => {\n                    if (onSplitViewChange) {\n                      onSplitViewChange(false);\n                    }\n                  }} />\n                  :\n                  <VerticalSplitIcon onClick={() => {\n                    if (onSplitViewChange) {\n                      onSplitViewChange(true);\n                    }\n                  }} />\n                }\n              </IconButton>\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:darkMode\"] ?\n                  <Brightness3Icon onClick={() => onDarkModeChange(false)} />\n                  :\n                  <WbSunnyIcon onClick={() => onDarkModeChange(true)} />\n                }\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        zIndex: 1,\n        opacity: 1,\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiAppBar: {\n      root: {\n        backgroundColor: \"transparent !important\",\n      },\n      colorDefault: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[900],\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        zIndex: 1,\n        opacity: 1,\n      },\n    },\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n      colorPrimary: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiToolbar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import SplitPane from \"react-split-pane\";\nimport React from \"react\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\ninterface IProps {\n  onChange?: (size: number) => any;\n  left: any;\n  right: any;\n  leftStyle?: CSSProperties;\n  rightStyle?: CSSProperties;\n  style?: CSSProperties;\n  direction?: \"horizontal\" | \"vertical\";\n  splitLeft?: boolean;\n  split?: boolean;\n  onlyRenderSplit?: boolean;\n}\n\nconst PlaygroundSplitPane: React.FC<IProps> = (props) => {\n  const handleChange = (size: number) => {\n    if (props.onChange) {\n      props.onChange(size);\n    }\n  };\n\n  if (props.split === false && props.onlyRenderSplit) {\n    return (\n      <div key={2} style={props.splitLeft ? props.leftStyle : props.rightStyle}>\n        {props.splitLeft ? props.left : props.right}\n      </div>\n    );\n  }\n\n  const dir = props.direction || \"vertical\";\n  const defaultSize = !props.split\n    ? dir === \"horizontal\" ? window.innerHeight : window.innerWidth\n    : dir === \"horizontal\" ? window.innerHeight / 2 : window.innerWidth / 2;\n  return (\n    <SplitPane split={dir}\n      style={props.style}\n      className={\"playground-splitview\"}\n      minSize={100}\n      maxSize={0}\n      defaultSize={defaultSize}\n      size={defaultSize}\n      onChange={handleChange}>\n      <div style={\n        props.leftStyle ? { ...props.leftStyle, ...{ display: \"flex\", flexDirection: \"column\", height: \"100%\" } }\n          : { display: \"flex\", flexDirection: \"column\", height: \"100%\" }\n      } key={1}>\n        {props.left}\n      </div>\n      <div key={2} style={props.rightStyle}>\n        {props.right}\n      </div>\n    </SplitPane >\n  );\n};\n\nexport default PlaygroundSplitPane;\n","import { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport refParser from \"json-schema-ref-parser\";\n\nconst useParsedSchema = (defaultValue: object | any) => {\n  const [parsedSchema, setParsedSchema] = useState();\n  const validateAndSetSchema = (schema: string) => {\n    let maybeSchema;\n    try {\n      maybeSchema = JSON.parse(schema);\n    } catch (e) {\n      //\n    }\n    if (!maybeSchema) {\n      return;\n    }\n    refParser.dereference(maybeSchema).then((dereferencedSchema) => {\n      setParsedSchema(dereferencedSchema);\n      _.defer(() => window.localStorage.setItem(\"schema\", schema));\n    });\n  };\n  useEffect(() => {\n    if (defaultValue) {\n      validateAndSetSchema(defaultValue);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return [parsedSchema, validateAndSetSchema];\n};\n\nexport default useParsedSchema;\n","import { useState, Dispatch } from \"react\";\n\nfunction useDefaultEditorValue(): [string | null, Dispatch<any>] {\n  const [defaultValue, setDefaultValue] = useState<string | null>(() => {\n    return window.localStorage.getItem(\"schema\");\n  });\n  return [defaultValue, setDefaultValue];\n}\n\nexport default useDefaultEditorValue;\n","let idCounter = 0;\nexport default async (url: string) => {\n  const response = await fetch(url, {\n    body: JSON.stringify({\n      id: idCounter++,\n      jsonrpc: \"2.0\",\n      method: \"rpc.discover\",\n      params: [],\n    }),\n    headers: { \"Content-Type\": \"application/json\" },\n    method: \"POST\",\n  });\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  const responseJSON = await response.json();\n  return JSON.stringify(responseJSON.result, null, 2);\n};\n","import { useState, useEffect, Dispatch } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport fetchUrlSchemaFile from \"../fetchUrlSchemaFile\";\nimport fetchSchemaFromRpcDiscover from \"../fetchSchemaFromRpcDiscover\";\n\ninterface ISearchBarResponse {\n  results: any;\n  error: string | undefined;\n}\n\nconst useSearchBar = (defaultValue: string | undefined): [string | undefined, ISearchBarResponse, Dispatch<any>] => {\n  const [searchUrl, setSearchUrl] = useState<string | undefined>(defaultValue);\n  const [results, setResults] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (!searchUrl) {\n      return;\n    }\n    if (isEmpty(searchUrl)) {\n      return;\n    }\n    if (searchUrl.match(/\\.json$/)) {\n      fetchUrlSchemaFile(searchUrl)\n        .then(setResults)\n        .catch((e) => {\n          const msg = `Error fetching schema for: ${searchUrl}`;\n          console.error(msg, e);\n          setError(msg);\n        });\n    } else {\n      fetchSchemaFromRpcDiscover(searchUrl)\n        .then(setResults)\n        .catch((e) => {\n          const msg = `Error fetching rpc.discover for: ${searchUrl}`;\n          console.error(msg, e);\n          setError(msg);\n        });\n    }\n  }, [searchUrl]);\n  return [searchUrl, { results, error }, setSearchUrl];\n};\n\nexport default useSearchBar;\n","export default async (schemaUrl: string) => {\n  const response = await fetch(schemaUrl);\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  return response.text();\n};\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = () => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import { createStore } from \"reusable\";\nimport useQueryParams from \"../hooks/useQueryParams\";\n\nexport default createStore(() => {\n  return useQueryParams();\n});\n","import { createStore } from \"reusable\";\nimport useSearchBar from \"../hooks/useSearchBar\";\nimport queryParamStore from \"./queryParamsStore\";\n\nexport default createStore(() => {\n  const [query] = queryParamStore();\n\n  return useSearchBar(query.schemaUrl);\n});\n","import { createStore } from \"reusable\";\nimport { useState } from \"react\";\n\nexport default createStore(() => {\n  const [inspectorContents, setInspectorContents] = useState();\n  return [inspectorContents, setInspectorContents];\n});\n","import React from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport { IMethodPluginProps } from \"@open-rpc/docs-react/build/Methods/Methods\";\nimport searchBarStore from \"../stores/searchBarStore\";\nimport { ExamplePairingObject, ExampleObject } from \"@open-rpc/meta-schema\";\nimport useInspectorActionStore from \"../stores/inspectorActionStore\";\n\nconst InspectorPlugin: React.FC<IMethodPluginProps> = (props) => {\n  const [searchUrl] = searchBarStore();\n  const [, setInspectorContents] = useInspectorActionStore();\n  const method = props.openrpcMethodObject;\n  const examplePosition = 0;\n  let example;\n  let exampleParams: any;\n  if (method && method.examples && method.examples[examplePosition]) {\n    example = method.examples[examplePosition] as ExamplePairingObject;\n    exampleParams = (example.params as ExampleObject[]).map((p) => p.value);\n  }\n  return (\n    <Tooltip title=\"Open in Inspector\">\n      <Button variant=\"contained\" onClick={() => setInspectorContents({\n        url: searchUrl,\n        openrpcMethodObject: props.openrpcMethodObject,\n        request: {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method.name,\n          params: exampleParams || [],\n        },\n      })}><span role=\"img\" aria-label=\"try-it-inspector\">🕵️‍♂️</span>️️ Try It Now</Button>\n\n    </Tooltip>\n  );\n};\n\nexport default InspectorPlugin;\n","import { useState } from \"react\";\nimport { IUISchema } from \"../UISchema\";\n\ntype SetSectionType = ({ section, key, value }: {\n  section: string;\n  key: string;\n  value: any;\n}) => any;\n\nconst useUISchema = (defaultValue: IUISchema): [IUISchema, SetSectionType] => {\n  const [UISchema, setUISchema] = useState(defaultValue);\n  const setUISchemaBySection: SetSectionType = ({ section, key, value }) => {\n    setUISchema({\n      ...UISchema,\n      [section]: {\n        ...UISchema.appBar,\n        [key]: value,\n      },\n    });\n  };\n  return [UISchema, setUISchemaBySection];\n};\n\nexport default useUISchema;\n","import { createStore } from \"reusable\";\nimport useUISchema from \"../hooks/useUISchema\";\nimport queryParamsStore from \"./queryParamsStore\";\nimport { mergeUISchema } from \"../UISchema\";\n\nexport default createStore(() => {\n  const [query] = queryParamsStore();\n\n  const defaultUISchema = {\n    appBar: {\n      \"ui:input\": true,\n      \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n      /* tslint:disable */\n      \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n      /* tslint:enable */\n      \"ui:splitView\": true,\n      \"ui:darkMode\": false,\n      \"ui:title\": \"OpenRPC Playground\",\n    },\n    methods: {\n      \"ui:defaultExpanded\": false,\n      \"ui:methodPlugins\": true,\n    },\n    params: {\n      \"ui:defaultExpanded\": false,\n    },\n  };\n  return useUISchema(mergeUISchema(defaultUISchema, query.uiSchema));\n});\n","export interface IUISchema {\n  appBar: {\n    [\"ui:title\"]: string,\n    [\"ui:logoUrl\"]: string,\n    [\"ui:input\"]: boolean,\n    [\"ui:inputPlaceholder\"]: string,\n    [\"ui:splitView\"]: boolean,\n    [\"ui:darkMode\"]: boolean,\n  };\n  methods: {\n    [\"ui:defaultExpanded\"]: boolean,\n    [\"ui:methodPlugins\"]: boolean,\n  };\n  params: {\n    [\"ui:defaultExpanded\"]: boolean,\n  };\n}\n\nexport const mergeUISchema = (a: IUISchema, b: IUISchema) => {\n  if (a && b) {\n    return {\n      appBar: {\n        ...a.appBar,\n        ...b.appBar || {},\n      },\n      methods: {\n        ...a.methods,\n        ...b.methods || {},\n      },\n      params: {\n        ...a.params,\n        ...b.params || {},\n      },\n    };\n  } else {\n    return a || b;\n  }\n};\n","export default [\n  {\n    name: \"api-with-examples\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/api-with-examples-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"link-example\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/link-example-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"params-by-name-petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/params-by-name-petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore-expanded\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-expanded-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"simple-math\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/simple-math-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"empty-document\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/empty-openrpc.json\", //tslint:disable-line\n  },\n];\n","import React, { useRef, useEffect } from \"react\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport * as monaco from \"monaco-editor\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\nimport schema from \"@open-rpc/meta-schema\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  editorDidMount?: (_: any, editor: any) => any;\n  value: any;\n}\n\nconst OpenRPCEditor: React.FC<IProps> = (props) => {\n  const editorRef = useRef();\n  const windowSize = useWindowSize();\n  let model: any;\n\n  useEffect(() => {\n    if (editorRef !== undefined && editorRef.current !== undefined) {\n      (editorRef.current as any).layout();\n    }\n  }, [windowSize]);\n\n  useEffect(() => {\n    return function cleanup() {\n      if (model) {\n        model.dispose();\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function handleEditorDidMount(_: any, editor: any) {\n    editorRef.current = editor;\n    const modelUriString = \"inmemory://openrpc-playground.json\";\n    const modelUri = monaco.Uri.parse(modelUriString);\n    model = monaco.editor.createModel(props.value || \"\", \"json\", modelUri);\n    editor.setModel(model);\n    addDiagnostics(modelUri.toString(), schema, monaco);\n    if (props.editorDidMount) {\n      props.editorDidMount(_, editor);\n    }\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <MonacoEditor\n      height=\"93vh\"\n      editorOptions={{\n        useShadows: false,\n        minimap: {\n          enabled: false,\n        },\n        scrollBeyondLastLine: false,\n        lineNumbers: \"on\",\n      }}\n      value={props.value}\n      editorDidMount={handleEditorDidMount}\n      language=\"json\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default OpenRPCEditor;\n","import { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nimport schema from \"@open-rpc/meta-schema\";\n\n// Monaco Replace Meta Schema:\n// Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\nconst useMonacoReplaceMetaSchema = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [metaSchema, setMetaSchema] = useState(schema);\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"replace-meta-schema\",\n      label: \"Replace Meta Schema\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          setMetaSchema(JSON.parse(result));\n        }\n      },\n    });\n  }, [editor]);\n\n  return [metaSchema];\n};\n\nexport default useMonacoReplaceMetaSchema;\n","import { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\n\n// Vim Mode:\n// Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\nconst useMonacoVimMode = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [vimMode, setVimMode] = useState();\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"vim-mode\",\n      label: \"Vim Mode\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        if (vimMode) {\n          vimMode.dispose();\n        }\n        setVimMode(initVimMode(editor));\n      },\n    });\n\n    return () => {\n      if (vimMode) {\n        vimMode.dispose();\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n\n  return [editor, vimMode];\n};\n\nexport default useMonacoVimMode;\n","import React, { useState, useEffect } from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport * as monaco from \"monaco-editor\";\nimport { Documentation } from \"@open-rpc/docs-react\";\nimport useInterval from \"@use-it/interval\";\nimport \"./App.css\";\nimport AppBar from \"./AppBar/AppBar\";\nimport { IUISchema } from \"./UISchema\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"./SnackBar/SnackBar\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./themes/openrpcTheme\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport { CssBaseline, Container, Tab, Typography, IconButton, Tooltip, Tabs } from \"@material-ui/core\";\nimport PlaygroundSplitPane from \"./PlaygroundSplitPane\";\nimport useParsedSchema from \"./hooks/useParsedSchema\";\nimport useDefaultEditorValue from \"./hooks/useDefaultEditorValue\";\nimport InspectorPlugin from \"./plugins/InspectorPlugin\";\nimport UISchemaStore from \"./stores/UISchemaStore\";\nimport searchBarStore from \"./stores/searchBarStore\";\nimport examples from \"./examplesList\";\nimport OpenRPCEditor from \"./OpenRPCEditor\";\nimport useMonacoReplaceMetaSchema from \"./hooks/useMonacoReplaceMetaSchema\";\nimport useMonacoVimMode from \"./hooks/useMonacoVimMode\";\nimport { IExample } from \"./ExampleDocumentsDropdown/ExampleDocumentsDropdown\";\nimport Inspector from \"@open-rpc/inspector\";\nimport useInspectorActionStore from \"./stores/inspectorActionStore\";\n\nconst App: React.FC = () => {\n  const [defaultValue] = useDefaultEditorValue();\n  const [markers, setMarkers] = useState<monaco.editor.IMarker[]>([] as monaco.editor.IMarker[]);\n  const [searchUrl, { results, error }, setSearchUrl] = searchBarStore();\n  const [notification, setNotification] = useState<ISnackBarNotification | undefined>();\n  const [UISchema, setUISchemaBySection]: [IUISchema, any] = UISchemaStore();\n  const [editor, setEditor] = useState();\n  const [horizontalSplit, privateSetHorizontalSplit] = useState(true);\n  const setHorizontalSplit = (val: boolean) => {\n    if (editor) {\n      setTimeout(() => {\n        editor.layout();\n      }, 0);\n    }\n    privateSetHorizontalSplit(val);\n  };\n  const [inspectorContents] = useInspectorActionStore();\n  useMonacoReplaceMetaSchema(editor);\n  useMonacoVimMode(editor);\n\n  const handleEditorDidMount = (__: any, ed: any) => {\n    setEditor(ed);\n  };\n\n  useEffect(() => {\n    const defaultExample = examples.find((e) => e.name === \"petstore\");\n    if (!defaultValue && !searchUrl && defaultExample) {\n      setSearchUrl(defaultExample.url);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultValue]);\n\n  useEffect(() => {\n    setReactJsonOptions({\n      ...reactJsonOptions,\n      theme: UISchema.appBar[\"ui:darkMode\"] ? \"summerfruit\" : \"summerfruit:inverted\",\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [UISchema.appBar[\"ui:darkMode\"]]);\n\n  useInterval(() => {\n    const modelUriString = \"inmemory://openrpc-playground.json\";\n    const modelUri = monaco.Uri.parse(modelUriString);\n    const mk = monaco.editor.getModelMarkers({\n      resource: modelUri,\n    });\n    setMarkers(mk);\n  }, 5000);\n\n  useEffect(() => {\n    if (results && editor) {\n      editor.setValue(results);\n    }\n    if (results) {\n      setParsedSchema(results);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [results]);\n\n  useEffect(() => {\n    if (error) {\n      setNotification({\n        type: NotificationType.error,\n        message: error,\n      });\n    }\n  }, [error]);\n\n  const [parsedSchema, setParsedSchema] = useParsedSchema(defaultValue ? JSON.parse(defaultValue) : null);\n  useEffect(() => {\n    setParsedSchema(defaultValue);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultValue]);\n  const [reactJsonOptions, setReactJsonOptions] = useState({\n    theme: \"summerfruit:inverted\",\n    collapseStringsAfterLength: 25,\n    displayDataTypes: false,\n    displayObjectSize: false,\n    indentWidth: 2,\n    name: false,\n  });\n  const currentTheme = UISchema.appBar[\"ui:darkMode\"] ? darkTheme : lightTheme;\n  useEffect(() => {\n    if (inspectorContents) {\n      setHorizontalSplit(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inspectorContents]);\n  return (\n    <MuiThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      <AppBar\n        searchBarUrl={searchUrl}\n        uiSchema={UISchema}\n        examples={examples as IExample[]}\n        onExampleDocumentsDropdownChange={(example: IExample) => setSearchUrl(example.url)}\n        onSplitViewChange={(value) => {\n          setUISchemaBySection({\n            value,\n            key: \"ui:splitView\",\n            section: \"appBar\",\n          });\n        }}\n        onDarkModeChange={(value: boolean) => {\n          monaco.editor.setTheme(value ? \"vs-dark\" : \"vs\");\n          setUISchemaBySection({\n            value,\n            key: \"ui:darkMode\",\n            section: \"appBar\",\n          });\n        }}\n        onChangeUrl={setSearchUrl}\n      />\n      <PlaygroundSplitPane\n        direction=\"horizontal\"\n        splitLeft={true}\n        split={horizontalSplit}\n        leftStyle={{\n          width: \"100%\",\n          height: \"100%\",\n        }}\n        right={\n          <>\n            <Inspector hideToggleTheme={true} url={\n              searchUrl && searchUrl.includes(\".json\") ? null : searchUrl\n            }\n              request={inspectorContents && inspectorContents.request}\n              openrpcDocument={parsedSchema}\n            />\n          </>\n        }\n        onChange={() => editor && editor.layout()}\n        left={\n          <PlaygroundSplitPane\n            onlyRenderSplit={true}\n            split={UISchema.appBar[\"ui:splitView\"]}\n            leftStyle={{\n              marginTop: \"58px\",\n              paddingBottom: \"25px\",\n              height: \"100%\",\n              width: \"100%\",\n            }}\n            rightStyle={{\n              height: \"100%\",\n              width: \"100%\",\n              overflowY: \"auto\",\n              marginTop: \"58px\",\n            }}\n            onChange={() => editor && editor.layout()}\n            left={\n              <>\n                <JSONValidationErrorList markers={markers} />\n                <OpenRPCEditor\n                  editorDidMount={handleEditorDidMount}\n                  onChange={(val) => {\n                    setParsedSchema(val);\n                  }}\n                  value={defaultValue || \"\"}\n                />\n              </>\n            }\n            right={\n              <>\n                <Container >\n                  <Documentation\n                    schema={parsedSchema as any}\n                    uiSchema={UISchema}\n                    reactJsonOptions={reactJsonOptions}\n                    methodPlugins={\n                      UISchema.methods[\"ui:methodPlugins\"]\n                        ? [InspectorPlugin]\n                        : undefined\n                    }\n                  />\n                </Container>\n                <Tabs\n                  variant=\"scrollable\"\n                  indicatorColor=\"primary\"\n                  value={0}\n                  style={{ position: \"absolute\", bottom: \"0\", right: \"25px\", zIndex: 1, marginBottom: \"0px\" }}\n                >\n                  <Tab\n                    onClick={() => setHorizontalSplit(!horizontalSplit)}\n                    style={{\n                      background: currentTheme.palette.background.default,\n                      width: \"165px\",\n                      paddingRight: \"30px\",\n                      border: `1px solid ${currentTheme.palette.text.hint}`,\n                    }}\n                    label={\n                      <div>\n                        <Typography\n                          variant=\"body1\"><span role=\"img\" aria-label=\"inspector\">🕵️‍♂️</span>️ Inspector</Typography>\n                        <Tooltip title=\"Toggle Inspector\">\n                          <IconButton style={{ position: \"absolute\", right: \"5px\", top: \"20%\" }} size=\"small\">\n                            {horizontalSplit\n                              ? <ExpandMore />\n                              : <ExpandLess />\n                            }\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    }>\n                  </Tab>\n                </Tabs>\n              </>\n            }\n          />\n\n        }\n      />\n      <SnackBar\n        close={() => setNotification({} as ISnackBarNotification)}\n        notification={notification as ISnackBarNotification} />\n    </MuiThemeProvider>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ReusableProvider } from \"reusable\";\n\nReactDOM.render(\n  <ReusableProvider>\n    <App />\n  </ReusableProvider>\n, document.getElementById(\"root\"));\n"],"sourceRoot":""}
{"version":3,"sources":["JSONValidationErrorList.tsx","examplesList.tsx","SearchBar/SearchBar.tsx","SnackBar/SnackBar.tsx","AppBar/AppBar.tsx","themes/openrpcTheme.ts","PlaygroundSplitPane.tsx","hooks/useMonaco.tsx","hooks/useMonacoModel.tsx","hooks/useParsedSchema.tsx","hooks/useUISchema.tsx","hooks/useDefaultEditorValue.tsx","fetchUrlSchemaFile.tsx","fetchSchemaFromRpcDiscover.tsx","hooks/useSearchBar.tsx","hooks/useMonacoVimMode.tsx","hooks/useMonacoReplaceMetaSchema.tsx","hooks/useQueryParams.tsx","App.tsx","UISchema.tsx","index.tsx"],"names":["withStyles","theme","list","color","palette","secondary","main","height","listStyle","overflow","wrapper","maxHeight","props","classes","markers","length","react_default","a","createElement","className","map","marker","key","message","startLineNumber","startColumn","examplesList","name","url","NotificationType","title","marginLeft","spacing","unit","appBar","uiSchema","searchBarUrl","onChangeUrl","downshift_esm","initialInputValue","onInputValueChange","id","_ref","query","getInputProps","getItemProps","getMenuProps","getLabelProps","isOpen","inputValue","highlightedIndex","openMenu","selectedItem","clearSelection","index_es","Object","assign","onChange","e","target","value","onFocus","event","placeholder","style","width","position","zIndex","maxWidth","suggestions","filter","includes","suggestion","index","isSelected","item","selected","component","fontWeight","container","xs","variant","ApplicationBar","_this$props","this","onSplitViewChange","onDarkModeChange","elevation","alignItems","sm","direction","alt","src","only","background","padding","src_SearchBar_SearchBar","justify","Fullscreen_default","onClick","VerticalSplit_default","Brightness3_default","WbSunny_default","Component","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarCntWrapper","onClose","other","objectWithoutProperties","Icon","classNames","aria-describedby","icon","iconVariant","action","IconButton_default","aria-label","close","Close_default","React","SnackBarContentWrapper","green","backgroundColor","dark","primary","amber","fontSize","opacity","marginRight","display","margin","SnackBarWrapper","_this$props2","notification","isEmpty","open","autoHideDuration","anchorOrigin","vertical","horizontal","type","SnackBar","lightTheme","createMuiTheme","overrides","MuiAppBar","root","default","darkTheme","paper","MuiTable","MuiTypography","PlaygroundSplitPane","split","right","index_esm","minSize","maxSize","defaultSize","window","innerWidth","size","flexDirection","left","useMonaco","monacoRef","darkMode","watchers","_useState","useState","_useState2","slicedToArray","editor","setEditor","updateDimensions","layout","useEffect","onChangeRef","current","monaco","create","onDidChangeModelContent","v","getValue","addEventListener","removeEventListener","dispose","toConsumableArray","useMonacoModel","defaultValue","schema","model","setModel","_useState3","_useState4","setPosition","existingModel","getModels","modelUri","parse","concat","Math","random","m","createModel","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","updateOptions","tabSize","_position","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","setSelection","focus","useParsedSchema","parsedSchema","setParsedSchema","maybeSchema","JSON","refParser","dereference","then","dereferencedSchema","_","defer","localStorage","setItem","useUISchema","UISchema","setUISchema","section","objectSpread","defineProperty","useDefaultEditorValue","getItem","fetchUrlSchemaFile","asyncToGenerator","regenerator_default","mark","_callee","schemaUrl","response","wrap","_context","prev","next","fetch","sent","status","Error","abrupt","text","stop","_x","apply","arguments","idCounter","fetchSchemaFromRpcDiscover","responseJSON","body","stringify","jsonrpc","method","params","headers","Content-Type","result","useSearchBar","searchUrl","setSearchUrl","results","setResults","_useState5","_useState6","setError","match","catch","msg","console","initVimMode","require","useMonacoVimMode","vimMode","setVimMode","addAction","label","keybindings","chord","CtrlCmd","KEY_K","KEY_V","contextMenuGroupId","contextMenuOrder","run","useMonacoReplaceMetaSchema","metaSchema","setMetaSchema","KEY_R","prompt","useQueryParams","qs","location","search","ignoreQueryPrefix","depth","decoder","str","test","parseFloat","decodeURIComponent","App","_useQueryParams","_useDefaultEditorValu","_useDefaultEditorValu2","setMarkers","_useSearchBar","_useSearchBar2","_useSearchBar2$","setNotification","useInterval","getModelMarkers","setValue","b","_useParsedSchema","_useParsedSchema2","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","reactJsonOptions","_useUISchema","ui:input","ui:inputPlaceholder","ui:logoUrl","ui:splitView","ui:darkMode","ui:title","methods","ui:defaultExpanded","_useUISchema2","setUISchemaBySection","monacoEl","useRef","_useMonaco","debounce","changes","range","endLineNumber","endColumn","_useMonaco2","_useMonacoReplaceMeta","_useMonacoModel","_useMonacoModel2","_useMonacoVimMode","styles","AppBar","setTheme","src_PlaygroundSplitPane","Fragment","src_JSONValidationErrorList","ref","build_default","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.262647f4.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nconst JSONValidationErrorList: React.FC<IProps> = (props) => {\n  const { classes, markers } = props;\n  if (!markers || markers.length === 0) { return null; }\n  return (\n    <div className={classes.wrapper}>\n      <ul className={classes.list}>\n        {markers && markers.map((marker) => {\n          return (\n            <li key={marker.message}>\n              {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n\n};\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","export default [\n  {\n    name: \"api-with-examples\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/api-with-examples-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"link-example\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/link-example-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"params-by-name-petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/params-by-name-petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore-expanded\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-expanded-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"simple-math\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/simple-math-openrpc.json\", //tslint:disable-line\n  },\n];\n","import React, { Component, ChangeEvent } from \"react\";\nimport Downshift from \"downshift\";\nimport {\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Paper,\n  Menu,\n  MenuItem,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\nimport suggestions from \"../examplesList\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  searchBarUrl: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nfunction getSuggestion(query: string | null) {\n  if (!query) {\n    return suggestions;\n  }\n  return suggestions.filter((value) => {\n    return value.name.includes(query) || value.url.includes(query);\n  });\n}\n\nconst SearchBar: React.FC<IProps> = (props) => {\n  const { uiSchema,  searchBarUrl, onChangeUrl } = props;\n  return (\n    <Downshift initialInputValue={searchBarUrl} onInputValueChange={onChangeUrl} id=\"downshift\">\n      {({\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem,\n        openMenu,\n        clearSelection,\n      }) => (\n          <div>\n            <InputBase\n              {...getInputProps({\n                onChange: (e) => {\n                  if (e.target.value === \"\") {\n                    clearSelection();\n                  }\n                },\n              })}\n              onFocus={(event: any) => openMenu()}\n              placeholder={uiSchema && uiSchema.appBar[\"ui:inputPlaceholder\"]}\n              style={{ width: \"100%\" }}\n            />\n            <div {...getMenuProps()} style={{ position: \"absolute\", zIndex: 1 }}>\n              {isOpen ? (\n                <Paper style={{ maxWidth: \"640px\" }}>\n                  {getSuggestion(inputValue).map((suggestion: any, index: number) => {\n                    const isSelected = highlightedIndex === index;\n                    return (\n                      <MenuItem\n                        {...getItemProps({ item: suggestion.url })}\n                        key={suggestion.url}\n                        selected={isSelected}\n                        component=\"div\"\n                        style={{\n                          fontWeight: isSelected ? 500 : 400,\n                        }}\n                      >\n                        <Grid container spacing={0}>\n                          <Grid item xs={12}>\n                            <Typography variant=\"subheading\">{suggestion.name}</Typography>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Typography variant=\"caption\">{suggestion.url}</Typography>\n                          </Grid>\n                        </Grid>\n                      </MenuItem>\n                    );\n                  })}\n                </Paper>\n              ) : null}\n            </div>\n          </div>\n        )}\n    </Downshift>\n  );\n};\n\nexport default withStyles(styles)(SearchBar);\n","import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component, ChangeEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { IUISchema } from \"../UISchema\";\nimport {isEmpty} from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success= \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  uiSchema?: IUISchema;\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n uiSchema?: IUISchema;\n onClose: any;\n variant: NotificationType;\n className: string;\n message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n      open\n      autoHideDuration={10000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}>\n      <SnackBarContentWrapper\n      onClose={close}\n      variant={notification.type}\n      message={<span>{notification.message}</span>}\n      className={classes.margin}\n      />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import React, { Component, ChangeEvent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  IconButton,\n  Paper,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n} from \"@material-ui/core\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport { IUISchema } from \"../UISchema\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  searchBarUrl: string | undefined;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange: (split: boolean) => any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes, onSplitViewChange, onDarkModeChange } = this.props;\n    return (\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Grid alignItems=\"center\" container spacing={24}>\n            <Grid item xs={6} sm={3} direction=\"row\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={7}>\n                {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:input\"] &&\n                  <Paper style={{\n                    background: \"rgba(0, 0, 0, 0.1)\",\n                    padding: \"0px 10px 0px 10px\",\n                    width: \"100%\",\n                  }} elevation={0}>\n                    <SearchBar\n                      searchBarUrl={this.props.searchBarUrl}\n                      onChangeUrl={this.props.onChangeUrl} uiSchema={uiSchema}\n                    />\n                  </Paper>\n                }\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={2} container justify=\"flex-end\">\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:splitView\"] ?\n                  <FullscreenIcon onClick={() => onSplitViewChange(false)} />\n                  :\n                  <VerticalSplitIcon onClick={() => onSplitViewChange(true)} />\n                }\n              </IconButton>\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:darkMode\"] ?\n                  <Brightness3Icon onClick={() => onDarkModeChange(false)} />\n                  :\n                  <WbSunnyIcon onClick={() => onDarkModeChange(true)} />\n                }\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const lightTheme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#212121\",\n      paper: \"black\",\n    },\n  },\n  overrides: {\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: \"#fff\",\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import SplitPane from \"react-split-pane\";\nimport React, { useState } from \"react\";\nimport { Component } from \"react\";\n\ninterface IProps {\n  onChange?: (size: number) => any;\n  left: JSX.Element;\n  right: JSX.Element;\n  split?: boolean | undefined;\n}\n\nconst PlaygroundSplitPane: React.FC<IProps> = (props) => {\n  const handleChange = (size: number) => {\n    if (props.onChange) {\n      props.onChange(size);\n    }\n  };\n\n  if (props.split === false) {\n    return (\n      <div className=\"docs\" key={2}>\n        {props.right}\n      </div>\n    );\n  }\n\n  return (\n    <SplitPane split=\"vertical\"\n      minSize={100}\n      maxSize={-100}\n      defaultSize={window.innerWidth / 2}\n      onChange={handleChange}>\n      <div key={1} style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }} >\n        {props.left}\n      </div>\n      <div className=\"docs\" key={2}>\n        {props.right}\n      </div>\n    </SplitPane>\n  );\n};\n\nexport default PlaygroundSplitPane;\n","import React, { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\n\nconst useMonaco = (\n  monacoRef: React.RefObject<HTMLElement>,\n  darkMode: boolean,\n  onChange?: (event: monaco.editor.IModelContentChangedEvent, schema: string) => any,\n  watchers?: any[],\n) => {\n  const [editor, setEditor] = useState();\n  const updateDimensions = () => {\n    if (editor) {\n      editor.layout();\n    }\n  };\n  useEffect(() => {\n    let onChangeRef: monaco.IDisposable;\n    if (monacoRef && monacoRef.current) {\n      const e = monaco.editor.create(monacoRef.current, {\n        theme: darkMode ? \"vs-dark\" : \"vs\",\n      });\n      setEditor(e);\n      onChangeRef = e.onDidChangeModelContent((event: monaco.editor.IModelContentChangedEvent) => {\n        if (onChange) {\n          const v = e.getValue();\n          onChange(event, v);\n        }\n      });\n      window.addEventListener(\"resize\", updateDimensions);\n    }\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions);\n      if (editor) {\n        editor.dispose();\n      }\n      if (onChangeRef) {\n        onChangeRef.dispose();\n      }\n    };\n  }, [...watchers || []]);\n  return [editor, updateDimensions];\n};\n\nexport default useMonaco;\n","import { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\n\nconst useMonacoModel = (\n  defaultValue: string | undefined | null,\n  editor: monaco.editor.IStandaloneCodeEditor,\n  schema: any,\n) => {\n  const [model, setModel] = useState();\n  const [position, setPosition] = useState([4, 13, 4, 13]);\n  useEffect(() => {\n    if (editor) {\n      const existingModel = monaco.editor.getModels()[0];\n      if (existingModel) {\n        existingModel.dispose();\n      }\n      const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n      const m = monaco.editor.createModel(defaultValue || \"\", \"json\", modelUri);\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            fileMatch: [\"*\"],\n            schema,\n            uri: modelUri.toString(),\n          },\n        ],\n        validate: true,\n      });\n      m.updateOptions({ tabSize: 2 });\n      setModel(m);\n      editor.setModel(m);\n      const [selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn] = position;\n      editor.setSelection(\n        new monaco.Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn),\n      );\n      editor.focus();\n    }\n\n    return () => {\n      if (model) {\n        model.dispose();\n      }\n    };\n  }, [editor, schema]);\n  return [model, setPosition];\n};\n\nexport default useMonacoModel;\n","import { useState } from \"react\";\nimport _ from \"lodash\";\nimport refParser from \"json-schema-ref-parser\";\n\nconst useParsedSchema = (defaultValue: object | any) => {\n  const [parsedSchema, setParsedSchema] = useState(defaultValue);\n  const validateAndSetSchema = (schema: string) => {\n    let maybeSchema;\n    try {\n      maybeSchema = JSON.parse(schema);\n    } catch (e) {\n      //\n    }\n    if (!maybeSchema) {\n      return;\n    }\n    refParser.dereference(maybeSchema).then((dereferencedSchema) => {\n      setParsedSchema(dereferencedSchema);\n      _.defer(() => window.localStorage.setItem(\"schema\", schema));\n    });\n  };\n  return [parsedSchema, validateAndSetSchema];\n};\n\nexport default useParsedSchema;\n","import { useState } from \"react\";\nimport { IUISchema } from \"../UISchema\";\n\ntype SetSectionType = ({ section, key, value }: {\n  section: string;\n  key: string;\n  value: any;\n}) => any;\n\nconst useUISchema = (defaultValue: IUISchema): [IUISchema, SetSectionType] => {\n  const [UISchema, setUISchema] = useState(defaultValue);\n  const setUISchemaBySection: SetSectionType = ({ section, key, value }) => {\n    setUISchema({\n      ...UISchema,\n      [section]: {\n        ...UISchema.appBar,\n        [key]: value,\n      },\n    });\n  };\n  return [UISchema, setUISchemaBySection];\n};\n\nexport default useUISchema;\n","import { useState, Dispatch } from \"react\";\n\nfunction useDefaultEditorValue(): [string | null, Dispatch<any>] {\n  const [defaultValue, setDefaultValue] = useState<string | null>(() => {\n    return window.localStorage.getItem(\"schema\");\n  });\n  return [defaultValue, setDefaultValue];\n}\n\nexport default useDefaultEditorValue;\n","export default async (schemaUrl: string) => {\n  const response = await fetch(schemaUrl);\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  return response.text();\n};\n","let idCounter = 0;\nexport default async (url: string) => {\n  const response = await fetch(url, {\n    body: JSON.stringify({\n      id: idCounter++,\n      jsonrpc: \"2.0\",\n      method: \"rpc.discover\",\n      params: [],\n    }),\n    headers: { \"Content-Type\": \"application/json\" },\n    method: \"POST\",\n  });\n  if (response.status === 404) {\n    throw new Error(\"404: Not Found\");\n  }\n  const responseJSON = await response.json();\n  return JSON.stringify(responseJSON.result, null, 2);\n};\n","import { useState, useEffect, Dispatch } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport fetchUrlSchemaFile from \"../fetchUrlSchemaFile\";\nimport fetchSchemaFromRpcDiscover from \"../fetchSchemaFromRpcDiscover\";\n\ninterface ISearchBarResponse {\n  results: any;\n  error: string | undefined;\n}\n\nconst useSearchBar = (defaultValue: string | undefined): [string | undefined, ISearchBarResponse, Dispatch<any>] => {\n  const [searchUrl, setSearchUrl] = useState<string | undefined>(defaultValue);\n  const [results, setResults] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (!searchUrl) {\n      return;\n    }\n    if (isEmpty(searchUrl)) {\n      return;\n    }\n    if (searchUrl.match(/\\.json$/)) {\n      fetchUrlSchemaFile(searchUrl)\n        .then(setResults)\n        .catch((e) => {\n          const msg = `Error fetching schema for: ${searchUrl}`;\n          console.error(msg, e);\n          setError(msg);\n        });\n    } else {\n      fetchSchemaFromRpcDiscover(searchUrl)\n        .then(setResults)\n        .catch((e) => {\n          const msg = `Error fetching rpc.discover for: ${searchUrl}`;\n          console.error(msg, e);\n          setError(msg);\n        });\n    }\n  }, [searchUrl]);\n  return [searchUrl, { results, error }, setSearchUrl];\n};\n\nexport default useSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\n\n// Vim Mode:\n// Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\nconst useMonacoVimMode = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [vimMode, setVimMode] = useState();\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"vim-mode\",\n      label: \"Vim Mode\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        if (vimMode) {\n          vimMode.dispose();\n        }\n        setVimMode(initVimMode(editor));\n      },\n    });\n\n    return () => {\n      if (vimMode) {\n        vimMode.dispose();\n      }\n    };\n  }, [editor]);\n\n  return [editor, vimMode];\n};\n\nexport default useMonacoVimMode;\n","import React, { useState, useEffect } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\nimport schema from \"@open-rpc/meta-schema\";\n\n// Monaco Replace Meta Schema:\n// Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\nconst useMonacoReplaceMetaSchema = (editor: monaco.editor.IStandaloneCodeEditor) => {\n  const [metaSchema, setMetaSchema] = useState(schema);\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"replace-meta-schema\",\n      label: \"Replace Meta Schema\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          setMetaSchema(JSON.parse(result));\n        }\n      },\n    });\n  }, [editor]);\n\n  return [metaSchema];\n};\n\nexport default useMonacoReplaceMetaSchema;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = () => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport * as monaco from \"monaco-editor\";\nimport _ from \"lodash\";\nimport Documentation from \"@open-rpc/docs-react\";\nimport useInterval from \"@use-it/interval\";\nimport \"./App.css\";\nimport AppBar from \"./AppBar/AppBar\";\nimport { OpenRPC } from \"@open-rpc/meta-schema\";\nimport { mergeUISchema } from \"./UISchema\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"./SnackBar/SnackBar\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./themes/openrpcTheme\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport PlaygroundSplitPane from \"./PlaygroundSplitPane\";\nimport useMonaco from \"./hooks/useMonaco\";\nimport useMonacoModel from \"./hooks/useMonacoModel\";\nimport useParsedSchema from \"./hooks/useParsedSchema\";\nimport useUISchema from \"./hooks/useUISchema\";\nimport useDefaultEditorValue from \"./hooks/useDefaultEditorValue\";\nimport useSearchBar from \"./hooks/useSearchBar\";\nimport useMonacoVimMode from \"./hooks/useMonacoVimMode\";\nimport useMonacoReplaceMetaSchema from \"./hooks/useMonacoReplaceMetaSchema\";\nimport useQueryParams from \"./hooks/useQueryParams\";\n\nconst App: React.FC = () => {\n  const [query] = useQueryParams();\n  const [defaultValue, setDefaultValue] = useDefaultEditorValue();\n  const [markers, setMarkers] = useState<monaco.editor.IMarker[]>([] as monaco.editor.IMarker[]);\n  const [searchUrl, { results, error }, setSearchUrl] = useSearchBar(query.schemaUrl);\n  const [notification, setNotification] = useState<ISnackBarNotification | undefined>();\n\n  useInterval(() => {\n    setMarkers(monaco.editor.getModelMarkers({}));\n  }, 5000);\n\n  useEffect(() => {\n    if (results && editor) {\n      editor.setValue(results)\n    }\n    if (results) {\n      setParsedSchema(results);\n    }\n  }, [results]);\n\n  useEffect(() => {\n    if (error) {\n      setNotification({\n        type: NotificationType.error,\n        message: error,\n      });\n    }\n  }, [error]);\n\n  const [parsedSchema, setParsedSchema] = useParsedSchema(defaultValue ? JSON.parse(defaultValue) : null);\n  const [reactJsonOptions, setReactJsonOptions] = useState({\n    theme: \"summerfruit:inverted\",\n    collapseStringsAfterLength: 25,\n    displayDataTypes: false,\n    displayObjectSize: false,\n    indentWidth: 2,\n    name: false,\n  });\n  const defaultUISchema = {\n    appBar: {\n      \"ui:input\": true,\n      \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n      /* tslint:disable */\n      \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n      /* tslint:enable */\n      \"ui:splitView\": true,\n      \"ui:darkMode\": false,\n      \"ui:title\": \"OpenRPC Playground\",\n    },\n    methods: {\n      \"ui:defaultExpanded\": false,\n    },\n    params: {\n      \"ui:defaultExpanded\": false,\n    },\n  };\n  const [UISchema, setUISchemaBySection] = useUISchema(mergeUISchema(defaultUISchema, query.uiSchema));\n  const monacoEl = useRef(null);\n  const handleMonacoEditorOnChange = (event: monaco.editor.IModelContentChangedEvent, value: string) => {\n    setParsedSchema(value);\n    const changes = event.changes[0].range;\n    setPosition([changes.startLineNumber, changes.startColumn, changes.endLineNumber, changes.endColumn]);\n  };\n  const [editor, updateDimensions] = useMonaco(\n    monacoEl,\n    UISchema.appBar[\"ui:darkMode\"],\n    _.debounce(handleMonacoEditorOnChange, 500),\n    [UISchema],\n  );\n  const [metaSchema] = useMonacoReplaceMetaSchema(editor);\n  const [model, setPosition] = useMonacoModel(\n    parsedSchema ? JSON.stringify(parsedSchema, null, 2) : defaultValue,\n    editor,\n    metaSchema,\n  );\n  const [vimMode] = useMonacoVimMode(editor);\n\n  return (\n    <MuiThemeProvider theme={UISchema.appBar[\"ui:darkMode\"] ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <AppBar\n        searchBarUrl={searchUrl}\n        uiSchema={UISchema}\n        onSplitViewChange={(value) => {\n          setUISchemaBySection({\n            value,\n            key: \"ui:splitView\",\n            section: \"appBar\",\n          });\n        }}\n        onDarkModeChange={(value: boolean) => {\n          setUISchemaBySection({\n            value,\n            key: \"ui:darkMode\",\n            section: \"appBar\",\n          });\n          if (editor) {\n            monaco.editor.setTheme(value ? \"vs-dark\" : \"vs\");\n          }\n        }}\n        onChangeUrl={_.debounce(setSearchUrl, 500)} />\n      <PlaygroundSplitPane\n        split={UISchema.appBar[\"ui:splitView\"]}\n        onChange={updateDimensions as any}\n        left={\n          <>\n            <JSONValidationErrorList markers={markers} />\n            <div key={\"editor\"} style={{ height: \"100%\" }} ref={monacoEl} />\n          </>\n        }\n        right={\n          <Documentation\n            schema={parsedSchema as OpenRPC}\n            uiSchema={UISchema}\n            reactJsonOptions={reactJsonOptions}\n          />\n        }\n      />\n      <SnackBar\n        close={() => setNotification({} as ISnackBarNotification)}\n        notification={notification as ISnackBarNotification} />\n    </MuiThemeProvider>\n  );\n};\nexport default App;\n","export interface IUISchema {\n  appBar: {\n    [\"ui:title\"]: string,\n    [\"ui:logoUrl\"]: string,\n    [\"ui:input\"]: boolean,\n    [\"ui:inputPlaceholder\"]: string,\n    [\"ui:splitView\"]: boolean,\n    [\"ui:darkMode\"]: boolean,\n  };\n  methods: {\n    [\"ui:defaultExpanded\"]: boolean,\n  };\n  params: {\n    [\"ui:defaultExpanded\"]: boolean,\n  };\n}\n\nexport const mergeUISchema = (a: IUISchema, b: IUISchema) => {\n  if (a && b) {\n    return {\n      appBar: {\n        ...a.appBar,\n        ...b.appBar || {},\n      },\n      methods: {\n        ...a.methods,\n        ...b.methods || {},\n      },\n      params: {\n        ...a.params,\n        ...b.params || {},\n      },\n    };\n  } else {\n    return a || b;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}